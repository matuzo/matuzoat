!function(e){var t={};function n(s){if(t[s])return t[s].exports;var i=t[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(s,i,function(t){return e[t]}.bind(null,i));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){n(3),e.exports=n(2)},function(e,t,n){!function(){"use strict";"undefined"!=typeof document&&function(e){var t;function n(){t||(t=!0,e())}["interactive","complete"].indexOf(document.readyState)>=0?e():(t=!1,document.addEventListener("DOMContentLoaded",n,!1),window.addEventListener("load",n,!1))}(function(){var e=!0,t=!1,n=null,s={text:!0,search:!0,url:!0,tel:!0,email:!0,password:!0,number:!0,date:!0,month:!0,week:!0,time:!0,datetime:!0,"datetime-local":!0};function i(e){return!!(e&&e!==document&&"HTML"!==e.nodeName&&"BODY"!==e.nodeName&&"classList"in e&&"contains"in e.classList)}function o(e){e.classList.contains("focus-visible")||(e.classList.add("focus-visible"),e.setAttribute("data-focus-visible-added",""))}function a(t){e=!1}function r(){document.addEventListener("mousemove",c),document.addEventListener("mousedown",c),document.addEventListener("mouseup",c),document.addEventListener("pointermove",c),document.addEventListener("pointerdown",c),document.addEventListener("pointerup",c),document.addEventListener("touchmove",c),document.addEventListener("touchstart",c),document.addEventListener("touchend",c)}function c(t){"html"!==t.target.nodeName.toLowerCase()&&(e=!1,document.removeEventListener("mousemove",c),document.removeEventListener("mousedown",c),document.removeEventListener("mouseup",c),document.removeEventListener("pointermove",c),document.removeEventListener("pointerdown",c),document.removeEventListener("pointerup",c),document.removeEventListener("touchmove",c),document.removeEventListener("touchstart",c),document.removeEventListener("touchend",c))}document.addEventListener("keydown",function(t){i(document.activeElement)&&o(document.activeElement),e=!0},!0),document.addEventListener("mousedown",a,!0),document.addEventListener("pointerdown",a,!0),document.addEventListener("touchstart",a,!0),document.addEventListener("focus",function(t){var n,a,r;i(t.target)&&((e||(n=t.target,a=n.type,"INPUT"==(r=n.tagName)&&s[a]&&!n.readOnly||"TEXTAREA"==r&&!n.readOnly||n.isContentEditable))&&o(t.target))},!0),document.addEventListener("blur",function(e){var s;i(e.target)&&((e.target.classList.contains("focus-visible")||e.target.hasAttribute("data-focus-visible-added"))&&(t=!0,window.clearTimeout(n),n=window.setTimeout(function(){t=!1,window.clearTimeout(n)},100),(s=e.target).hasAttribute("data-focus-visible-added")&&(s.classList.remove("focus-visible"),s.removeAttribute("data-focus-visible-added"))))},!0),document.addEventListener("visibilitychange",function(n){"hidden"==document.visibilityState&&(t&&(e=!0),r())},!0),r(),document.body.classList.add("js-focus-visible")})}()},function(e,t,n){},function(e,t,n){"use strict";function s(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}n.r(t);var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.options=t,this.canvas=document.querySelector(t.canvas),this.canvas&&(this.context=this.canvas.getContext("2d"),this.color="red",this.size=this.prop_set(t.size,20),this.num_x=t.num_x,this.num_y=t.num_y,this.init_canvas())}var t,n,i;return t=e,(n=[{key:"init_canvas",value:function(){if(this.prepare_canvas(),this.attach_events(),this.options.pattern&&this.parse_pattern(),this.options.fill){for(var e=Math.round(this.get_parent_width()/this.size/2),t=0;t<e;t++)this.squares.push({x:this.size*(2*t),y:0});this.draw_squares()}}},{key:"attach_events",value:function(){this.place_square=this.place_square.bind(this),this.canvas.addEventListener("click",this.place_square)}},{key:"place_square",value:function(e){this.context.clearRect(0,0,this.canvas.width,this.canvas.height);var t=e.pageX-e.target.offsetLeft,n=e.pageY-e.target.offsetTop,s=t-t%this.size,i=n-n%this.size;i===this.canvas.height&&(i-=this.size),s===this.canvas.width&&(s-=this.size);var o=this.squares.findIndex(function(e){return e.x===s&e.y===i});o>-1?this.squares.splice(o,1):this.squares.push({x:s,y:i}),this.draw_squares(this.context,this.squares)}},{key:"prop_set",value:function(e,t){return e||t}},{key:"prepare_canvas",value:function(){this.canvas.classList.add("square-canvas--visible"),this.canvas.width=this.num_x*this.size,this.canvas.height=this.num_y*this.size,"infinite"===this.num_x&&(this.canvas.width=this.get_parent_width()),this.squares=[]}},{key:"get_parent_width",value:function(){var e=getComputedStyle(this.canvas.parentNode),t=this.canvas.parentNode.clientWidth;return t-=parseFloat(e.paddingLeft)+parseFloat(e.paddingRight)}},{key:"parse_pattern",value:function(){for(var e=this.options.pattern.split(","),t=0;t<e.length;t++){var n=parseInt(e[t].trim()),s=Math.floor(t/this.num_x),i=(t+this.num_x)%this.num_x;"infinite"===this.num_x&&(s=0,i=t),n&&this.squares.push({x:this.size*i,y:this.size*s})}this.draw_squares()}},{key:"draw_squares",value:function(){this.context.fillStyle=this.prop_set(this.options.color,"rgba(51, 51, 51, 0.9)");for(var e=0;e<this.squares.length;e++){var t=this.squares[e];this.context.fillRect(t.x,t.y,this.size,this.size)}}}])&&s(t.prototype,n),i&&s(t,i),e}(),o=o||function(e){var t=Date.now();return setTimeout(function(){e({didTimeout:!1,timeRemaining:function(){return Math.max(0,50-(Date.now()-t))}})},1)},a=o;var r,c=function(){navigator.connection&&navigator.connection.saveData&&(navigator.connection.effectiveType.includes("2g")||navigator.connection.saveData)||a(function(){!function(){for(var e,t,n=document.querySelectorAll(".js-nav-main a"),s=0;s<n.length;s++)e=n[s].href,t=void 0,((t=document.createElement("link")).relList||{}).supports&&!t.relList.supports("prefetch")||(t.rel="prefetch",t.href=e,document.head.appendChild(t))}()})};function u(e){var t,n=e.dataset.src;return(t=n,new Promise(function(e,n){var s=new Image;t&&(s.src=t),s.onload=e,s.onerror=n})).then(function(){e.classList.add("lazyloaded"),e.src=n,e.removeAttribute("data-src")})}function d(e){for(var t=0;t<e.length;t++){var n=e[t];if(n.intersectionRatio>0){var s=n.target;u(s),s.classList.remove("lazy"),r.unobserve(s)}}}var l,v=function(e){if(e.length){r=new IntersectionObserver(d,{rootMargin:"100px 0px"});for(var t=0;t<e.length;t++){var n=e[t];n.classList.contains("lazyloaded")||r.observe(n)}}},m=document.querySelectorAll(".js-demo");function h(e){var t=document.createElement("div");t.classList.add("demo__controls");var n=document.createElement("button"),s=document.createElement("span");s.classList.add("btn__inner"),s.textContent="Replay animation",n.appendChild(s),n.classList.add("btn"),n.classList.add("demo__btn"),n.addEventListener("click",function(){e.classList.remove("demo--playing"),setTimeout(function(){e.classList.add("demo--playing")},600)}),t.appendChild(n),e.appendChild(t)}function f(e){for(var t=function(t){var n=e[t];1===n.intersectionRatio&&setTimeout(function(){n.target.classList.add("demo--playing"),l.unobserve(n.target)},400)},n=0;n<e.length;n++)t(n)}var p=function(){if(m.length)for(var e=0;e<m.length;e++){var t=m[e];h(t),l=new IntersectionObserver(f,{threshold:[1]}),t.classList.contains("demo--playing")||l.observe(t)}};n(1),Element.prototype.closest||(Element.prototype.closest=function(e){var t=this;if(!document.documentElement.contains(t))return null;do{if(t.matches(e))return t;t=t.parentElement||t.parentNode}while(null!==t&&1===t.nodeType);return null});var y;new i({canvas:".js-sq-tl",num_x:1,num_y:1,pattern:"1",color:"#36B1BF"}),new i({canvas:".js-sq-tr",num_x:2,num_y:1,pattern:"1,1",color:"#36B1BF"}),new i({canvas:".js-sq-br",num_x:1,num_y:2,pattern:"1,1",color:"#F23C50"}),new i({canvas:".js-sq-bl",num_x:2,num_y:2,pattern:"1,0,1,1",color:"#F23C50"}),new i({canvas:".js-sq-home-intro",num_x:6,num_y:5,color:"#568b8e",size:10,pattern:"0,0,1,1,0,1,\n    0,1,1,0,0,1,\n    1,1,0,0,0,1,\n    0,1,1,0,0,0,\n    0,0,1,1,0,1"});document.querySelector(".js-random-emoji")&&(document.querySelector(".js-random-emoji").textContent=(y=["🤤","🐳","🍻","👊🏻","🍳"])[Math.round(Math.random()*(y.length-1))]),document.querySelector(".js-scroll-top")&&document.querySelector(".js-scroll-top").addEventListener("click",function(e){e.preventDefault(),document.querySelector(".js-logo").focus()}),c(),v(document.querySelectorAll(".lazy")),p();for(var g=document.querySelectorAll(".js-a-focus-demo"),L=[],b=function(e){L.push(0),function(){var t,n=g[e],s=n.querySelectorAll("a, button"),i=!1,o=document.createElement("button"),a=document.createElement("span");o.classList.add("btn"),a.classList.add("btn__inner"),o.appendChild(a);var r="Play animation";function c(e){a.textContent=e}function u(){L[e]<s.length-1?L[e]++:L[e]=0,n.querySelector(".focus").classList.remove("focus"),s[L[e]].classList.add("focus")}n.hasAttribute("data-button")&&(r=n.getAttribute("data-button")),c(r),n.insertBefore(o,n.firstChild),o.addEventListener("click",function(){i?(clearInterval(t),a.textContent=r):(s[L[e]].classList.add("focus"),t=window.setInterval(u,700),c("Stop animation")),i=!i})}()},_=0;_<g.length;_++)b(_);!function(){var e=document.querySelectorAll(".js-lighthouse-test");if(0!==e.length)for(var t=function(t){var n=e[t],s=n.querySelector(".js-run-lighthouse-test");s.addEventListener("click",function(e){s.querySelector("span").textContent="Running tests…",n.querySelector(".js-lighthouse-status").textContent="Running tests…",setTimeout(function(){n.classList.add("lighthouse-test--finished"),n.querySelector(".js-lighthouse-status").textContent="Tests finished. Accessibility score: 100."},1e3)})},n=0;n<e.length;n++)t(n)}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,