!function(t){var e={};function n(s){if(e[s])return e[s].exports;var i=e[s]={i:s,l:!1,exports:{}};return t[s].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,s){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(s,i,function(e){return t[e]}.bind(null,i));return s},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){n(2),t.exports=n(1)},function(t,e,n){},function(t,e,n){"use strict";function s(t,e){for(var n=0;n<e.length;n++){var s=e[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}n.r(e);var i=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.options=e,this.canvas=document.querySelector(e.canvas),this.canvas&&(this.context=this.canvas.getContext("2d"),this.color="red",this.size=this.prop_set(e.size,20),this.num_x=e.num_x,this.num_y=e.num_y,this.init_canvas())}var e,n,i;return e=t,(n=[{key:"init_canvas",value:function(){if(this.prepare_canvas(),this.attach_events(),this.options.pattern&&this.parse_pattern(),this.options.fill){for(var t=Math.round(this.get_parent_width()/this.size/2),e=0;e<t;e++)this.squares.push({x:this.size*(2*e),y:0});this.draw_squares()}}},{key:"attach_events",value:function(){this.place_square=this.place_square.bind(this),this.canvas.addEventListener("click",this.place_square)}},{key:"place_square",value:function(t){this.context.clearRect(0,0,this.canvas.width,this.canvas.height);var e=t.pageX-t.target.offsetLeft,n=t.pageY-t.target.offsetTop,s=e-e%this.size,i=n-n%this.size;i===this.canvas.height&&(i-=this.size),s===this.canvas.width&&(s-=this.size);var r=this.squares.findIndex(function(t){return t.x===s&t.y===i});r>-1?this.squares.splice(r,1):this.squares.push({x:s,y:i}),this.draw_squares(this.context,this.squares)}},{key:"prop_set",value:function(t,e){return t||e}},{key:"prepare_canvas",value:function(){this.canvas.removeAttribute("hidden"),this.canvas.width=this.num_x*this.size,this.canvas.height=this.num_y*this.size,"infinite"===this.num_x&&(this.canvas.width=this.get_parent_width()),this.squares=[]}},{key:"get_parent_width",value:function(){var t=getComputedStyle(this.canvas.parentNode),e=this.canvas.parentNode.clientWidth;return e-=parseFloat(t.paddingLeft)+parseFloat(t.paddingRight)}},{key:"parse_pattern",value:function(){for(var t=this.options.pattern.split(","),e=0;e<t.length;e++){var n=parseInt(t[e].trim()),s=Math.floor(e/this.num_x),i=(e+this.num_x)%this.num_x;"infinite"===this.num_x&&(s=0,i=e),n&&this.squares.push({x:this.size*i,y:this.size*s})}this.draw_squares()}},{key:"draw_squares",value:function(){this.context.fillStyle=this.prop_set(this.options.color,"rgba(51, 51, 51, 0.9)");for(var t=0;t<this.squares.length;t++){var e=this.squares[t];this.context.fillRect(e.x,e.y,this.size,this.size)}}}])&&s(e.prototype,n),i&&s(e,i),t}(),r=r||function(t){var e=Date.now();return setTimeout(function(){t({didTimeout:!1,timeRemaining:function(){return Math.max(0,50-(Date.now()-e))}})},1)},a=r;var o=function(){navigator.connection&&(navigator.connection.effectiveType.includes("2g")||navigator.connection.saveData)||a(function(){!function(){for(var t,e,n=document.querySelectorAll(".js-nav-main a"),s=0;s<n.length;s++)t=n[s].href,e=void 0,((e=document.createElement("link")).relList||{}).supports&&!e.relList.supports("prefetch")||(e.rel="prefetch",e.href=t,document.head.appendChild(e))}()})};Element.prototype.closest||(Element.prototype.closest=function(t){var e=this;if(!document.documentElement.contains(e))return null;do{if(e.matches(t))return e;e=e.parentElement||e.parentNode}while(null!==e&&1===e.nodeType);return null});var u;new i({canvas:".js-sq-tl",num_x:1,num_y:1,pattern:"1",color:"#36B1BF"}),new i({canvas:".js-sq-tr",num_x:2,num_y:1,pattern:"1,1",color:"#36B1BF"}),new i({canvas:".js-sq-br",num_x:1,num_y:2,pattern:"1,1",color:"#F23C50"}),new i({canvas:".js-sq-bl",num_x:2,num_y:2,pattern:"1,0,1,1",color:"#F23C50"}),new i({canvas:".js-sq-home-intro",num_x:6,num_y:5,color:"#568b8e",size:10,pattern:"0,0,1,1,0,1,\n    0,1,1,0,0,1,\n    1,1,0,0,0,1,\n    0,1,1,0,0,0,\n    0,0,1,1,0,1"}),new i({canvas:".js-sq-site-header",num_x:"infinite",num_y:1,size:5,color:"#1d4e6d",fill:"even"});function c(t){var e=document.querySelector(".js-site-content");e.innerHTML="",e.classList.add("site__content--hidden");var n=new XMLHttpRequest;n.open("GET",t,!0),n.onload=function(){var t=document.createElement("div");200===this.status&&(t.innerHTML=this.response,e.innerHTML=t.querySelector(".js-site-content").innerHTML,e.classList.remove("site__content--hidden"))},n.onerror=function(){page_content.innerHTML="For some reason I couldn't connect to the server, please try later again."},n.send()}document.querySelector(".js-random-emoji")&&(document.querySelector(".js-random-emoji").textContent=(u=["🤤","🐳","🍻","👊🏻","🍳"])[Math.round(Math.random()*(u.length-1))]),document.querySelector(".js-scroll-top")&&document.querySelector(".js-scroll-top").addEventListener("click",function(t){t.preventDefault(),document.querySelector(".js-logo").focus()}),o(),history.pushState({theme:"home"},location.pathname,location.pathname),document.querySelector(".js-post-list")&&document.querySelector(".js-post-list").addEventListener("click",function(t){var e=t.target.closest("a");e.dataset.post&&(t.preventDefault(),document.documentElement.setAttribute("data-theme",e.dataset.post),history.pushState({theme:e.dataset.post},e.href,e.href),c(e.href))}),window.onpopstate=function(t){t.state&&(document.documentElement.setAttribute("data-theme",t.state.theme),c(location.pathname))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,